//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.60310.0
// 
namespace Feedb.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WizardService")]
    public interface WizardService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WizardService/submitFeedback", ReplyAction="http://tempuri.org/WizardService/submitFeedbackResponse")]
        System.IAsyncResult BeginsubmitFeedback(int stuID, int rating, int mID, string feedback, int lecturerID, System.DateTime dt, System.AsyncCallback callback, object asyncState);
        
        void EndsubmitFeedback(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WizardService/getModuleList", ReplyAction="http://tempuri.org/WizardService/getModuleListResponse")]
        System.IAsyncResult BegingetModuleList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndgetModuleList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WizardService/getLecturers", ReplyAction="http://tempuri.org/WizardService/getLecturersResponse")]
        System.IAsyncResult BegingetLecturers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndgetLecturers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/WizardService/authenticate", ReplyAction="http://tempuri.org/WizardService/authenticateResponse")]
        System.IAsyncResult Beginauthenticate(int stuID, string password, System.AsyncCallback callback, object asyncState);
        
        bool Endauthenticate(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WizardServiceChannel : Feedb.ServiceReference1.WizardService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getModuleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getModuleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getLecturersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getLecturersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class authenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public authenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WizardServiceClient : System.ServiceModel.ClientBase<Feedb.ServiceReference1.WizardService>, Feedb.ServiceReference1.WizardService {
        
        private BeginOperationDelegate onBeginsubmitFeedbackDelegate;
        
        private EndOperationDelegate onEndsubmitFeedbackDelegate;
        
        private System.Threading.SendOrPostCallback onsubmitFeedbackCompletedDelegate;
        
        private BeginOperationDelegate onBegingetModuleListDelegate;
        
        private EndOperationDelegate onEndgetModuleListDelegate;
        
        private System.Threading.SendOrPostCallback ongetModuleListCompletedDelegate;
        
        private BeginOperationDelegate onBegingetLecturersDelegate;
        
        private EndOperationDelegate onEndgetLecturersDelegate;
        
        private System.Threading.SendOrPostCallback ongetLecturersCompletedDelegate;
        
        private BeginOperationDelegate onBeginauthenticateDelegate;
        
        private EndOperationDelegate onEndauthenticateDelegate;
        
        private System.Threading.SendOrPostCallback onauthenticateCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WizardServiceClient() {
        }
        
        public WizardServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WizardServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WizardServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WizardServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> submitFeedbackCompleted;
        
        public event System.EventHandler<getModuleListCompletedEventArgs> getModuleListCompleted;
        
        public event System.EventHandler<getLecturersCompletedEventArgs> getLecturersCompleted;
        
        public event System.EventHandler<authenticateCompletedEventArgs> authenticateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Feedb.ServiceReference1.WizardService.BeginsubmitFeedback(int stuID, int rating, int mID, string feedback, int lecturerID, System.DateTime dt, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsubmitFeedback(stuID, rating, mID, feedback, lecturerID, dt, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Feedb.ServiceReference1.WizardService.EndsubmitFeedback(System.IAsyncResult result) {
            base.Channel.EndsubmitFeedback(result);
        }
        
        private System.IAsyncResult OnBeginsubmitFeedback(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int stuID = ((int)(inValues[0]));
            int rating = ((int)(inValues[1]));
            int mID = ((int)(inValues[2]));
            string feedback = ((string)(inValues[3]));
            int lecturerID = ((int)(inValues[4]));
            System.DateTime dt = ((System.DateTime)(inValues[5]));
            return ((Feedb.ServiceReference1.WizardService)(this)).BeginsubmitFeedback(stuID, rating, mID, feedback, lecturerID, dt, callback, asyncState);
        }
        
        private object[] OnEndsubmitFeedback(System.IAsyncResult result) {
            ((Feedb.ServiceReference1.WizardService)(this)).EndsubmitFeedback(result);
            return null;
        }
        
        private void OnsubmitFeedbackCompleted(object state) {
            if ((this.submitFeedbackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.submitFeedbackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void submitFeedbackAsync(int stuID, int rating, int mID, string feedback, int lecturerID, System.DateTime dt) {
            this.submitFeedbackAsync(stuID, rating, mID, feedback, lecturerID, dt, null);
        }
        
        public void submitFeedbackAsync(int stuID, int rating, int mID, string feedback, int lecturerID, System.DateTime dt, object userState) {
            if ((this.onBeginsubmitFeedbackDelegate == null)) {
                this.onBeginsubmitFeedbackDelegate = new BeginOperationDelegate(this.OnBeginsubmitFeedback);
            }
            if ((this.onEndsubmitFeedbackDelegate == null)) {
                this.onEndsubmitFeedbackDelegate = new EndOperationDelegate(this.OnEndsubmitFeedback);
            }
            if ((this.onsubmitFeedbackCompletedDelegate == null)) {
                this.onsubmitFeedbackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsubmitFeedbackCompleted);
            }
            base.InvokeAsync(this.onBeginsubmitFeedbackDelegate, new object[] {
                        stuID,
                        rating,
                        mID,
                        feedback,
                        lecturerID,
                        dt}, this.onEndsubmitFeedbackDelegate, this.onsubmitFeedbackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Feedb.ServiceReference1.WizardService.BegingetModuleList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetModuleList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> Feedb.ServiceReference1.WizardService.EndgetModuleList(System.IAsyncResult result) {
            return base.Channel.EndgetModuleList(result);
        }
        
        private System.IAsyncResult OnBegingetModuleList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Feedb.ServiceReference1.WizardService)(this)).BegingetModuleList(callback, asyncState);
        }
        
        private object[] OnEndgetModuleList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((Feedb.ServiceReference1.WizardService)(this)).EndgetModuleList(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetModuleListCompleted(object state) {
            if ((this.getModuleListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getModuleListCompleted(this, new getModuleListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getModuleListAsync() {
            this.getModuleListAsync(null);
        }
        
        public void getModuleListAsync(object userState) {
            if ((this.onBegingetModuleListDelegate == null)) {
                this.onBegingetModuleListDelegate = new BeginOperationDelegate(this.OnBegingetModuleList);
            }
            if ((this.onEndgetModuleListDelegate == null)) {
                this.onEndgetModuleListDelegate = new EndOperationDelegate(this.OnEndgetModuleList);
            }
            if ((this.ongetModuleListCompletedDelegate == null)) {
                this.ongetModuleListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetModuleListCompleted);
            }
            base.InvokeAsync(this.onBegingetModuleListDelegate, null, this.onEndgetModuleListDelegate, this.ongetModuleListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Feedb.ServiceReference1.WizardService.BegingetLecturers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetLecturers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> Feedb.ServiceReference1.WizardService.EndgetLecturers(System.IAsyncResult result) {
            return base.Channel.EndgetLecturers(result);
        }
        
        private System.IAsyncResult OnBegingetLecturers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Feedb.ServiceReference1.WizardService)(this)).BegingetLecturers(callback, asyncState);
        }
        
        private object[] OnEndgetLecturers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((Feedb.ServiceReference1.WizardService)(this)).EndgetLecturers(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetLecturersCompleted(object state) {
            if ((this.getLecturersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getLecturersCompleted(this, new getLecturersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getLecturersAsync() {
            this.getLecturersAsync(null);
        }
        
        public void getLecturersAsync(object userState) {
            if ((this.onBegingetLecturersDelegate == null)) {
                this.onBegingetLecturersDelegate = new BeginOperationDelegate(this.OnBegingetLecturers);
            }
            if ((this.onEndgetLecturersDelegate == null)) {
                this.onEndgetLecturersDelegate = new EndOperationDelegate(this.OnEndgetLecturers);
            }
            if ((this.ongetLecturersCompletedDelegate == null)) {
                this.ongetLecturersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetLecturersCompleted);
            }
            base.InvokeAsync(this.onBegingetLecturersDelegate, null, this.onEndgetLecturersDelegate, this.ongetLecturersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Feedb.ServiceReference1.WizardService.Beginauthenticate(int stuID, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginauthenticate(stuID, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Feedb.ServiceReference1.WizardService.Endauthenticate(System.IAsyncResult result) {
            return base.Channel.Endauthenticate(result);
        }
        
        private System.IAsyncResult OnBeginauthenticate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int stuID = ((int)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Feedb.ServiceReference1.WizardService)(this)).Beginauthenticate(stuID, password, callback, asyncState);
        }
        
        private object[] OnEndauthenticate(System.IAsyncResult result) {
            bool retVal = ((Feedb.ServiceReference1.WizardService)(this)).Endauthenticate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnauthenticateCompleted(object state) {
            if ((this.authenticateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.authenticateCompleted(this, new authenticateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void authenticateAsync(int stuID, string password) {
            this.authenticateAsync(stuID, password, null);
        }
        
        public void authenticateAsync(int stuID, string password, object userState) {
            if ((this.onBeginauthenticateDelegate == null)) {
                this.onBeginauthenticateDelegate = new BeginOperationDelegate(this.OnBeginauthenticate);
            }
            if ((this.onEndauthenticateDelegate == null)) {
                this.onEndauthenticateDelegate = new EndOperationDelegate(this.OnEndauthenticate);
            }
            if ((this.onauthenticateCompletedDelegate == null)) {
                this.onauthenticateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnauthenticateCompleted);
            }
            base.InvokeAsync(this.onBeginauthenticateDelegate, new object[] {
                        stuID,
                        password}, this.onEndauthenticateDelegate, this.onauthenticateCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Feedb.ServiceReference1.WizardService CreateChannel() {
            return new WizardServiceClientChannel(this);
        }
        
        private class WizardServiceClientChannel : ChannelBase<Feedb.ServiceReference1.WizardService>, Feedb.ServiceReference1.WizardService {
            
            public WizardServiceClientChannel(System.ServiceModel.ClientBase<Feedb.ServiceReference1.WizardService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginsubmitFeedback(int stuID, int rating, int mID, string feedback, int lecturerID, System.DateTime dt, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = stuID;
                _args[1] = rating;
                _args[2] = mID;
                _args[3] = feedback;
                _args[4] = lecturerID;
                _args[5] = dt;
                System.IAsyncResult _result = base.BeginInvoke("submitFeedback", _args, callback, asyncState);
                return _result;
            }
            
            public void EndsubmitFeedback(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("submitFeedback", _args, result);
            }
            
            public System.IAsyncResult BegingetModuleList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getModuleList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndgetModuleList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("getModuleList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetLecturers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getLecturers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndgetLecturers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("getLecturers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Beginauthenticate(int stuID, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = stuID;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("authenticate", _args, callback, asyncState);
                return _result;
            }
            
            public bool Endauthenticate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("authenticate", _args, result)));
                return _result;
            }
        }
    }
}
